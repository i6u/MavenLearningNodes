<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.zttc</groupId>
    <artifactId>user-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <url>http://maven.apache.org</url>

    <!--聚合:统一管理子模块-->
    <modules>
        <module>../user-core</module>
        <module>../user-log</module>
        <module>../user-service</module>
    </modules>


    <distributionManagement>
        <repository>
            <id>learning-releases</id>
            <name>user release test</name>
            <url>http://10.211.55.22:8081/repository/local-data-releases/</url>
        </repository>
        <snapshotRepository>
            <id>learning-snapshots</id>
            <name>user snapshot test</name>
            <url>http://10.211.55.22:8081/repository/local-data-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!--配置私服-->
    <!--在maven的setting.xm中配置profile之后，就可以不用在项目中配置-->
    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>nexus</id>-->
    <!--<name>Nexus Repository</name>-->
    <!--<url>http://10.211.55.22:8081/repository/maven-public/</url>-->
    <!--<releases>-->
    <!--&lt;!&ndash;可以下载releases包，默认就为true&ndash;&gt;-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--<snapshots>-->
    <!--&lt;!&ndash;可以下载snapshots包，默认就为false&ndash;&gt;-->
    <!--<enabled>true</enabled>-->
    <!--</snapshots>-->
    <!--</repository>-->
    <!--</repositories>-->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <parent.pom.path>../user-parent/pom.xml</parent.pom.path>
        <jdbc.mysql.driver>com.mysql.jdbc.Driver</jdbc.mysql.driver>
        <jdbc.mysql.url>jdbc:mysql://10.211.55.3:3306</jdbc.mysql.url>
        <jdbc.mysql.username>root</jdbc.mysql.username>
        <jdbc.mysql.password>root</jdbc.mysql.password>
    </properties>


    <!--build包裹构建项目时的操作-->
    <build>
        <!--plugins包裹直接使用的plugin-->
        <plugins>
            <!--每一个插件都用plugin包裹-->
            <plugin>
                <!--maven坐标三剑客在插件库中找-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <!--executions包裹执行插件的相关操作-->
                <executions>
                    <!--比如execution把插件绑定在maven生命周期中的某个阶段-->
                    <execution>
                        <!--插件执行的坐标phase-->
                        <phase>compile</phase>
                        <!--执行的目标goal-->
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <!--ok，这个（注意是这样配置的这个插件）插件执行结束-->
            </plugin>

        </plugins>
        <!--声明，提供引用-->
        <!--插件管理，类似依赖管理，声明不引用-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>
                    <!--插件中也是可以引入依赖的，只是提供给插件使用-->
                    <dependencies>
                        <!--配置和项目中配置依赖的方法相同-->
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>5.1.24</version>
                        </dependency>
                    </dependencies>
                    <!--configuration配置插件的相关属性，这需要查官方文档-->
                    <configuration>
                        <!--${这里引入的是在properties配置的自定义属性}-->
                        <driver>${jdbc.mysql.driver}</driver>
                        <url>${jdbc.mysql.url}</url>
                        <username>${jdbc.mysql.username}</username>
                        <password>${jdbc.mysql.password}</password>
                    </configuration>
                    <!--眼熟-->
                    <executions>
                        <execution>
                            <id>create-db</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <!--插件执行某个目标，同样可以配置configuration，具体看相关插件的文档-->
                            <configuration>
                                <sqlCommand>create database if not exists i_maven_plugin_sql</sqlCommand>
                            </configuration>
                        </execution>
                        <execution>
                            <id>init-table</id>
                            <phase>test-compile</phase>
                            <goals><goal>execute</goal></goals>
                            <configuration>
                                <srcFiles>
                                    <srcFile>src/main/resources/init.sql</srcFile>
                                </srcFiles>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-rar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <includeJar>true</includeJar>≈
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>rar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--配置编译jdk版本-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <!--跳过测试编译test-compiler-->
                        <!--<skip>true</skip>-->
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <!--<includes>-->
                            <!--<include>**/Hello*</include>-->
                            <!--<include>TestUserDao.java</include>-->
                        <!--</includes>-->
                        <!--<excludes>-->
                            <!--<exclude>**/Test*.java</exclude>-->
                        <!--</excludes>-->
                        <!--跳过测试-->
                        <!--<skip>true</skip>-->
                    </configuration>
                </plugin>
                <!--生成测试覆盖率-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>test</phase>
                            <goals><goal>cobertura</goal></goals>
                        </execution>
                    </executions>
                    <configuration>
                        <formats>
                            <format>html</format>
                            <format>xml</format>
                        </formats>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!--指定父类信息-->
    <!--用dependencyManagement进行依赖包管理-->
    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>4.3.2.RELEASE</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.15</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>9.4.0.M1</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-plus -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-plus</artifactId>
                <version>9.4.0.M1</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.10</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>5.1.0.Final</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.18</version>
                <scope>runtime</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/log4j/log4j -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.dbunit/dbunit -->
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>2.2</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>3.1</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>user-core</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>user-log</artifactId>
                <version>1.0-SNAPSHOT</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>